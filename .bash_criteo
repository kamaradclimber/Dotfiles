# /* vim: set filetype=sh : */


__whereami() {
  if grep 'search criteois.lan' /etc/resolv.conf > /dev/null ; then
    echo "criteo"
  # 78.194.186.226 is home fixed ipaddress
  # 91.199.242.* is the address of criteo when using the vpn
  elif curl -s icanhazip.com | grep -q -e 78.194.186.226 -e 91.199.242.; then
    echo "home"
  elif host 192.168.1.1 | grep -q -e neufbox; then
    echo "SPDO"
  else
    echo "elsewhere"
  fi
}


# use this method to get cached access to localization
__cached_whereami() {
  local tmp=/tmp/whereami.cache
  if test -f $tmp; then
    [[ -z "$(find $tmp -mmin +30)" ]] && cat $tmp && return 0
  fi
  __whereami | tee $tmp
}

__mothership() {
  local home=familleseux.net
  case $(__cached_whereami) in
    mothership )
      echo "ssh grego@capodimonte";;
    *)
      echo "ssh grego@$home";;
  esac
}

__homepage() {
  case $(__cached_whereami) in
    criteo )
      export HOMEPAGE='https://jira.criteois.com/secure/RapidBoard.jspa?rapidView=1033'
  esac
}

__homepage

function knife_until {
  if [ $# -ne 1 ]; then
    echo "USAGE: $0 <NODE_NAME>" >&2
    exit 1
  fi
  NODE_NAME=$1
  START_TIME=$(date +%s)
  CURRENT_TIME=${START_TIME}
  KNIFE_OPTS="-i -R 1"
  TIMEOUT_TIME=$(date -d "${TIMEOUT} seconds" +%s)
  while ! bundle exec knife search node "name:${NODE_NAME} AND ohai_time:[${START_TIME} TO ${CURRENT_TIME}]" ${KNIFE_OPTS} 2>&1 | grep -q ${NODE_NAME};
  do
    echo -n .
    sleep 30
    CURRENT_TIME=$(date +%s)
  done
}

function j {
  xdg-open http://jira.criteois.com/browse/$1
}

export CRITEO_USER=g.seux

function kitchenec2 {
  source ~/.env
  KITCHEN_YAML=.kitchen.ec2.yml bundle exec kitchen $@
}

alias gogogo='ssh -D 1080 -Nn criteo'
